@protocol CustomViewDataSource <NSObject>
@end

@protocol CustomViewDelegate <NSObject>
@end
 
@interface CustomView : UIView
@property (nonatomic,weak)id <CustomViewDataSource>dataSource;
@property (nonatomic,weak)id <CustomViewDelegate>delegate;

- (void)reloadData;
@end

#import "CustomView.h"
@interface CustomView()
@end


@implementation CustomView {
BOOL _needsReload;  /*! 需要重载 */
struct {
}_datasourceHas;    /*! 数据源存在标识 */
struct {
}_delegateHas;      /*! 数据委托存在标识 */
}


#pragma mark - life cycle
- (id)initWithFrame:(CGRect)frame {
if (self = [super initWithFrame:frame]) {
[self setNeedsReload];
}
return self;
}

- (void)layoutSubviews {
[self _reloadDataIfNeeded];
[super layoutSubviews];
}

#pragma mark - datasource
#pragma mark - delegate
#pragma mark - user events
#pragma mark - functions


- (void)commonInit {}

- (void)setDataSource {}

- (void)setDelegate {}

- (void)setNeedsReload {
_needsReload = YES;
[self setNeedsLayout];
}
- (void)_reloadDataIfNeeded {
if (_needsReload) {
[self reloadData];
}
}
- (void)reloadData {}
- (void)setFrame:(CGRect)frame {}
#pragma mark - notification
#pragma mark - getter and setter
