长连接相关:
udp 连接成功后，由客户端发起心跳包(2s/次)，心跳包需要携带sessionKey (客户端保存，如果本地没有则传0)，服务端收到并响应给客户端，客户端接收到根据服务器返回的ret判断:
ret = 1: 更新sessionkey
ret = 0: 表示连接成功,这个时候切换到正常心跳 (10s/次)
ret = -1: 表示连接超时，重置本地sessionKey 重新建立握手过程
ret = -4: 异地登录
ret = 其他: 需要重置本地sessionKey 重新建立握手过程

协议相关:
// 协议数据包头
#pragma pack(1)
typedef struct {
unsigned int packageLength;         // 包长度
unsigned short headerLength;        // 包头长度
unsigned short version;             // 版本号
unsigned int cmd;                   // 命令
unsigned int seq;                   // 序列号 (unique)
}PacketHeader_t;
#pragma pack()

** note **
seq 序列号 - 你给服务器器发送seq是多少，他就回seq多少给你

发出请求后都有一个请求超时时间，和请求重试次数，并放入等待Ack队列中，队列主要有两个状态NACK(代表未收到ack),ACK(代表收到ack)
Polling轮询机制:
这时候会定时轮询等待Ack
如果状态为NAck且请求超时，以及请求重试次数不为0 则需要重新发出请求，直到重试次数为0.
如果状态为Nack且请求超时，以及请求重试次数为0时候，则由App本地做处理.






