
/// ViewInterface
/// Usally implement by view controller / view
//  Protocol inside method For Present -> View
protocol ViewInterface: class {
    var presenter: ModuleInterface? {get set}
    
}


/// Module Interface
/// Usally implement by presenter
/// Protocol inside method for View -> Presenter
protocol ModuleInterface: class {
    weak var viewer: ViewInterface? {get set}
    var interactor: InteractorInput? {get set}
    weak var router:TDWIncomeCompareWireFrame? {get set}
}

/// InteractorInput
/// Usally implement by Interactor
/// Protocol inside method For Presenter -> Interactor
protocol Interactor: class {
    weak var presenter: InteractorOutput? {get set}
    
 
}

/// InteractorOutput
/// Usally implement by Presenter
/// Protocol insde method For Interactor -> Presenter
protocol InteractorOutput: class {
    var interactor: InteractorInput? {get set}
 
}

